###################################################

Запилить нормально MapResource и Resources!!
Проверить как ставится и изчезает меш ресурса ( да и остальные тоже )

Вынести класс карты как общий для всех проектов.
Обращаться к локалМап. Фулл мап - запретить для не Мап.
Поправить редактор карт. Добавить рабочего и иконку золота. Добавить считывание и запись версии. Устанавливать директорию с terrain.def
Использовать один класс Map для всех приложений юзающих карту!!!

Двигаться не привязываясь к сетке. И скорость анимации чтоб зависила от штрафа!

KernelBase constructor с параметрами вместо Configure, чтобы не проверять выполнилась ли она.

Определить стандартные действия для ИИ: Move, Collect, Health, Attack, Build, Repair, Heal

Проверить что быстрее выполняется: передача (х,у) по значению или по ссылке/указателю. Соотв. изменить &coord в параметрах функций.

###################################################
Дальнейшие планы:
В каждой стратегии существуют действия, которые повторяются каждый раз и на различных этапах игры. В основном это рутинная работа по строительству зданий и подвижных едениц, а также сбор ресурсов. Эти действия по мере увеличения области захвата, отвлекают у пользователя время и внимание, которые он мог бы уделить на более важные вещи. Поэтому было бы неплохо иметь возможность переложить часть этих действий на искусственный интеллект. Кроме того, это позволит сгладить преимущество компьютера в скорости отдачи команд.
Таким образом, следующим шагом разроботки должено стать написание элемента ИИ. Необходимо также увеличить количество и разнообразие Действий, которые может поддерживать ИИ, с одновременным расширением демонстрационного приложения.
В плане разработки начинает появляться проблема нехватки рабочей силы. Возможно разбить проект на 5 слабо связанных частей: Strategix, Sample1, Редактор Карт, добавление графических ресурсов, написание документации и публикация в интернете. Так же в скором времени должна появиться необходимость в игре по сети.
Кроме того, имеет смысл сделать ещё один пример применения Strategix на другом графическом движке.


###################################################
-----Потом---------

Раскоментить все строчи из TTBuilder и проверить на венде для boost 1.46
Может radius (сбора, атаки) засунуть в ПоискПути? Добавить у Enti область постройки( чтобы здания др-на-др не наезжали )
Привести в порядок Логи!!!! подумать как будут выходить предупреждения о невозможности действия!
mDebugOverlay - заработать
перейти на c++ox и запилить обращение к map через at. Либо самому запилить это через find.
ObjectTitle - каваизировать!
Сохранять граф. ресурсы Огра для следующей игры.
precompiled headers для gcc ?
Выделение нескольких прямоугольником.

Скрыть все открытые методы, которые не будет юзать юзер, но юзаются внутри самой бибиотеки. 
(Tick, AssignTickFeature, ...) (например сделать friend класс....)

Поддвижок ИИ сделать как можно более "отдельным" чтобы можно было подцепить его к другому ядру.
Иметь в виду, что ИИ может быть осуществлён не только через С++. (Lua например) Т.е. продумать правильный интерфейс подключения ИИ.

Добавить операторы для игровых типов:
template<typename T>
std::ostream& operator<<(std::ostream& o, const TRect<T>& r)
{
	o << "TRect<>(l:" << r.left << ", t:" << r.top << ", r:" << r.right << ", b:" << r.bottom << ")";
	return o;
}